#pragma once

#include "Act.h"
#include "Quest.h"
#include "QuestMessage.h"

namespace PoL
{

//=====================================================================================//
//                         class SendQuestMessage : public Act                         //
//=====================================================================================//
class SendQuestMessageAct : public Act
{
	bool m_started;
	bool m_ended;

	HQuest m_quest;
	QuestMessage m_msg;

public:
	SendQuestMessageAct(const std::string &, QuestMessage);

	/// Закончить акт, применив все его побочные эффекты
	virtual void skip() { m_ended = true; }
	/// Начался ли акт
	virtual bool isStarted() const { return m_started; }
	/// Начать акт
	virtual void start();
	/// Дать управление акту, чтобы он изменил игровую ситуацию
	virtual void update(float tau);
	/// Возвращает true, если акт закончен
	virtual bool isEnded() const { return m_ended; }
	/// Может ли действие закончиться
	virtual bool isEndable() const { return true; }
};

}