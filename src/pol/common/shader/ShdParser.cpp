/*
 * ShdParser: P a r s e r  S u p p o r t
 *
 * Generated from: shd_grammar.g
 *
 * Terence Parr, Russell Quong, Will Cohen, and Hank Dietz: 1989-1999
 * Parr Research Corporation
 * with Purdue University Electrical Engineering
 * with AHPCRC, University of Minnesota
 * ANTLR Version 1.33MR20
 */
#include "precomp.h"

#define ANTLR_VERSION	13320
#include <pccts/pcctscfg.h>
#include <pccts/pccts_stdio.h>
#define ANTLR_SUPPORT_CODE
#include "tokens.h"
#include "ShdParser.h"

const ANTLRChar *ShdParser::tokenName(int tok)   { return _token_tbl[tok]; }

const ANTLRChar *ShdParser::_token_tbl[]={
	/* 00 */	"Invalid",
	/* 01 */	"T_EOF",
	/* 02 */	"T_LCURLYBRACE",
	/* 03 */	"T_RCURLYBRACE",
	/* 04 */	"T_LPAREN",
	/* 05 */	"T_RPAREN",
	/* 06 */	"T_STEPS",
	/* 07 */	"T_SILENT",
	/* 08 */	"T_METAL",
	/* 09 */	"T_GROUND",
	/* 10 */	"T_WATER",
	/* 11 */	"T_ASPHALT",
	/* 12 */	"T_PLASTIC",
	/* 13 */	"T_IMPACT",
	/* 14 */	"T_BLOOD",
	/* 15 */	"T_DUST",
	/* 16 */	"T_SPARKLES",
	/* 17 */	"T_MARKS",
	/* 18 */	"T_BLACK",
	/* 19 */	"T_WHITE",
	/* 20 */	"T_HOT",
	/* 21 */	"T_ARMOUR",
	/* 22 */	"T_CULL",
	/* 23 */	"T_FRONT",
	/* 24 */	"T_BACK",
	/* 25 */	"T_NONE",
	/* 26 */	"T_SURFPARAM",
	/* 27 */	"T_ALPHASHADOW",
	/* 28 */	"T_FLESH",
	/* 29 */	"T_FOG",
	/* 30 */	"T_NODLIGHT",
	/* 31 */	"T_NODRAW",
	/* 32 */	"T_NOLIGHTMAP",
	/* 33 */	"T_NONSOLID",
	/* 34 */	"T_ORIGIN",
	/* 35 */	"T_PLAYERCLIP",
	/* 36 */	"T_TRANS",
	/* 37 */	"T_FLAMMABLE",
	/* 38 */	"T_DEFORMVERTS",
	/* 39 */	"T_AUTOSPRITE",
	/* 40 */	"T_AUTOSPRITE2",
	/* 41 */	"T_POLYGONOFFSET",
	/* 42 */	"T_ZBIAS",
	/* 43 */	"T_NOMIPMAP",
	/* 44 */	"T_NOPICMIP",
	/* 45 */	"T_MAP",
	/* 46 */	"T_LIGHTMAP",
	/* 47 */	"T_ANIMMAP",
	/* 48 */	"T_CLAMPMAP",
	/* 49 */	"T_FILLMODE",
	/* 50 */	"T_POINT",
	/* 51 */	"T_WIRE",
	/* 52 */	"T_SOLID",
	/* 53 */	"T_ALPHAFUNC",
	/* 54 */	"T_GT0",
	/* 55 */	"T_GE128",
	/* 56 */	"T_LT128",
	/* 57 */	"T_BLENDFUNC",
	/* 58 */	"T_ADD",
	/* 59 */	"T_FILTER",
	/* 60 */	"T_BLEND",
	/* 61 */	"T_MODULATE2X",
	/* 62 */	"T_ONE",
	/* 63 */	"T_ZERO",
	/* 64 */	"T_DST_COLOR",
	/* 65 */	"T_SRC_COLOR",
	/* 66 */	"T_SRC_ALPHA",
	/* 67 */	"T_INV_SRC_ALPHA",
	/* 68 */	"T_INV_SRC_COLOR",
	/* 69 */	"T_INV_DST_COLOR",
	/* 70 */	"T_TCGEN",
	/* 71 */	"T_ENVIROMENT",
	/* 72 */	"T_REFLECTION",
	/* 73 */	"T_LIGHTSPOT",
	/* 74 */	"T_SPHERE",
	/* 75 */	"T_ALPHAGEN",
	/* 76 */	"T_RGBGEN",
	/* 77 */	"T_IDENTITY",
	/* 78 */	"T_WAVE",
	/* 79 */	"T_VERTEX",
	/* 80 */	"T_LIGHTINGDIFFUSE",
	/* 81 */	"T_TCMOD",
	/* 82 */	"T_EMBOSS",
	/* 83 */	"T_ROTATE",
	/* 84 */	"T_SCALE",
	/* 85 */	"T_SCROLL",
	/* 86 */	"T_STRETCH",
	/* 87 */	"T_TURB",
	/* 88 */	"T_INVSAWTOOTH",
	/* 89 */	"T_SAWTOOTH",
	/* 90 */	"T_SIN",
	/* 91 */	"T_SQUARE",
	/* 92 */	"T_TRIANGLE",
	/* 93 */	"T_DEPTHFUNC",
	/* 94 */	"T_EQUAL",
	/* 95 */	"T_LEQUAL",
	/* 96 */	"T_ALWAYS",
	/* 97 */	"T_DEPTHWRITE",
	/* 98 */	"T_DECIMALINT",
	/* 99 */	"T_FLOATONE",
	/* 100 */	"T_FLOATTWO",
	/* 101 */	"T_ID_ONE",
	/* 102 */	"T_NEWLINE",
	/* 103 */	"/\\*",
	/* 104 */	"//~[\\n@]*",
	/* 105 */	"[\\r\\t\\ ]+",
	/* 106 */	"T_ERR_TOKEN",
	/* 107 */	"T_ID_TWO",
	/* 108 */	"[\\r\\t\\ ]+",
	/* 109 */	"\\n",
	/* 110 */	"//~[\\n]*",
	/* 111 */	"/\\*",
	/* 112 */	"[\\n\\r]",
	/* 113 */	"\\*/",
	/* 114 */	"\\*",
	/* 115 */	"~[\\*\\n\\r]+",
	/* 116 */	"TCL_SURFPARAM",
	/* 117 */	"TCL_DEFORMVERTS",
	/* 118 */	"TCL_CULL",
	/* 119 */	"TCL_NUM",
	/* 120 */	"TCL_BLEND_SHORTCUTS",
	/* 121 */	"TCL_BLEND_SRC",
	/* 122 */	"TCL_BLEND_DST",
	/* 123 */	"TCL_DEPTHFUNC",
	/* 124 */	"TCL_TCGEN_FUNC",
	/* 125 */	"TCL_FILLMODE",
	/* 126 */	"TCL_ALPHAFUNC",
	/* 127 */	"TCL_WAVE_FORM",
	/* 128 */	"TCL_RA_FUNC",
	/* 129 */	"TCL_RA_GEN",
	/* 130 */	"TCL_STEPS",
	/* 131 */	"TCL_IMPACT",
	/* 132 */	"TCL_MARKS",
	/* 133 */	"TCL_RESYNC"
};

ShdParser::ShdParser(ANTLRTokenBuffer *input) : ANTLRParser(input,1,0,0,20)
{
	token_tbl = _token_tbl;
	traceOptionValueDefault=0;		// MR10 turn trace OFF
}

SetWordType ShdParser::TCL_STEPS_set[20] = {0x80,0x1f,0x0,0x0};
SetWordType ShdParser::TCL_IMPACT_set[20] = {0x0,0xc0,0x1,0x2};
SetWordType ShdParser::TCL_MARKS_set[20] = {0x0,0x0,0x1c,0x2};
SetWordType ShdParser::TCL_CULL_set[20] = {0x0,0x0,0x80,0x3};
SetWordType ShdParser::TCL_SURFPARAM_set[20] = {0x0,0x0,0x0,0xf8, 0x3f,0x0,0x0,0x0, 0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_NUM_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0,
	0x1c,0x0,0x0,0x0};
SetWordType ShdParser::TCL_DEFORMVERTS_set[20] = {0x0,0x0,0x0,0x0, 0x80,0x1,0x0,0x0};
SetWordType ShdParser::TCL_BLEND_SHORTCUTS_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x3c};
SetWordType ShdParser::TCL_BLEND_SRC_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0xc0, 0x3d,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_BLEND_DST_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0xc0, 0x1e,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_TCGEN_FUNC_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x80,0x7,0x0,0x0
	};
SetWordType ShdParser::TCL_DEPTHFUNC_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0xc0,
	0x1,0x0,0x0,0x0, 0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_WAVE_FORM_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x1f
	};
SetWordType ShdParser::TCL_FILLMODE_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x1c,0x0};
SetWordType ShdParser::TCL_ALPHAFUNC_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0xc0,0x1};
SetWordType ShdParser::TCL_RA_GEN_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x18,0x0,0x0
	};
SetWordType ShdParser::setwd1[134] = {0x0,0x5,0x12,0x10,0x0,0x0,0x12,
	0x0,0x0,0x0,0x0,0x0,0x0,0x12,0x0,
	0x0,0x0,0x12,0x0,0x0,0x0,0x12,0x12,
	0x0,0x0,0x0,0x12,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x12,
	0x0,0x0,0x12,0x8,0x8,0x8,0x8,0x0,
	0x8,0x8,0x8,0x0,0x0,0x0,0x8,0x0,
	0x0,0x0,0x8,0x20,0x20,0x20,0x20,0x40,
	0x40,0x40,0x0,0x40,0x40,0x40,0x40,0x8,
	0x0,0x0,0x0,0x0,0x88,0x88,0x0,0x0,
	0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,
	0x0,0x0,0x8,0x0,0x0,0x0,0x4,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_RA_FUNC_set[20] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0xa0,0x1,0x0
	};
SetWordType ShdParser::setwd2[134] = {0x0,0x0,0x4,0x6,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x6,0x6,0x6,0x6,0x0,
	0x6,0x6,0x6,0x0,0x0,0x0,0x6,0x0,
	0x0,0x0,0x6,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6,
	0x0,0x0,0x0,0x0,0x6,0x6,0x1,0x0,
	0x1,0x1,0x6,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x6,0x0,
	0x0,0x0,0x6,0x0,0x0,0x0,0x4,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0};
SetWordType ShdParser::TCL_RESYNC_set[20] = {0x2,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0,
	0x20,0x0,0x0,0x0};
